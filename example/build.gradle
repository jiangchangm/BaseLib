plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

def androidId = rootProject.ext.android
def appId = rootProject.ext.appId
def releaseConfig = rootProject.ext.signingConfigs

def in_args = System.getProperty('env')
if (in_args != 'dev' && in_args != 'ivt' && in_args != 'prod') {
    ext.env = 'dev'
} else {
    ext.env = in_args
}

if (ext.env != 'prod') {
    ext.app_name = "baselib-${env}"
} else {
    ext.app_name = "baselib"
}

android {
    compileSdk androidId.compileSdkVersion

    defaultConfig {
        if (env != 'prod') {
            applicationId appId.applicationId
            manifestPlaceholders = [app_icon: "@mipmap/ic_launcher",
                                    app_icon_round: "@mipmap/ic_launcher_round",
                                    label   : "@string/app_name_test"]
        } else {
            applicationId appId.applicationId
            manifestPlaceholders = [app_icon: "@mipmap/ic_launcher",
                                    app_icon_round: "@mipmap/ic_launcher_round",
                                    label   : "@string/app_name"]
        }
        minSdk androidId.minSdkVersion
        targetSdk androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main.resources.srcDirs "src/main/env/${env}"
    }

    signingConfigs {
        myConfig {
            storeFile file("src/main/signer/${env}/${env}.jks")
            storePassword releaseConfig.storePassword
            keyAlias releaseConfig.keyAlias
            keyPassword releaseConfig.keyPassword
            v2SigningEnabled true
            v1SigningEnabled true
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            //移除所有未使用的方法、指令以减小 classes.dex 文件
            minifyEnabled false
            signingConfig signingConfigs.myConfig
        }

        release {
            minifyEnabled false
            //移除所有未使用的方法、指令以减小 classes.dex 文件
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.myConfig
        }
    }

    applicationVariants.all { variant ->
        def buildType = variant.buildType.name
        variant.outputs.each {
            if (buildType == "release") {
                it.outputFileName = "${app_name}_${variant.versionName}_${variant.versionCode}.apk"
            }
        }
    }

    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude 'META-INF/*******'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    api rootProject.ext.dependencies["corektx"]
    api rootProject.ext.dependencies["appcompat"]
    api rootProject.ext.dependencies["material"]
    api rootProject.ext.dependencies["constraintlayout"]
    implementation project(path: ':permission')
    implementation project(path: ':common')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}