import com.jiangcm.dependencies.*

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}


def in_args = System.getProperty('env')
if (in_args != 'dev' && in_args != 'ivt' && in_args != 'prod') {
    ext.env = 'dev'
} else {
    ext.env = in_args
}

if (ext.env != 'prod') {
    ext.app_name = "baselib-${env}"
} else {
    ext.app_name = "baselib"
}

android {
    compileSdk AndroidConfig.compileSdkVersion

    defaultConfig {
        if (env != 'prod') {
            applicationId AppId.applicationId
            manifestPlaceholders = [app_icon: "@mipmap/ic_launcher",
                                    app_icon_round: "@mipmap/ic_launcher_round",
                                    label   : "@string/app_name_test"]
        } else {
            applicationId AppId.applicationId
            manifestPlaceholders = [app_icon: "@mipmap/ic_launcher",
                                    app_icon_round: "@mipmap/ic_launcher_round",
                                    label   : "@string/app_name"]
        }
        minSdk AndroidConfig.minSdkVersion
        targetSdk AndroidConfig.targetSdkVersion
        versionCode AndroidConfig.versionCode
        versionName AndroidConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_11
            targetCompatibility JavaVersion.VERSION_11
        }
        kotlinOptions {
            jvmTarget = '11'
        }
    }


    sourceSets {
        main.resources.srcDirs "src/main/env/${env}"
    }

    signingConfigs {
        myConfig {
            storeFile file("src/main/signer/${env}/${env}.jks")
            storePassword SigningConfigs.storePassword
            keyAlias SigningConfigs.keyAlias
            keyPassword SigningConfigs.keyPassword
            v2SigningEnabled true
            v1SigningEnabled true
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            //移除所有未使用的方法、指令以减小 classes.dex 文件
            minifyEnabled false
            signingConfig signingConfigs.myConfig
        }

        release {
            minifyEnabled false
            //移除所有未使用的方法、指令以减小 classes.dex 文件
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.myConfig
        }
    }

    applicationVariants.all { variant ->
        def buildType = variant.buildType.name
        variant.outputs.each {
            if (buildType == "release") {
                it.outputFileName = "${app_name}_${variant.versionName}_${variant.versionCode}.apk"
            }
        }
    }

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
    }
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude 'META-INF/*******'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildFeatures {
        dataBinding true
    }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation project(path: ':base')
    implementation project(path: ':common')
    api Deps.lottie
    api Deps.navigationFragment
    api Deps.navigationUi
    api(Deps.arouterApi) {
        exclude module: 'support-v4'
    }
    implementation project(path: ':permission')
    kapt Deps.arouterCompiler
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    debugImplementation Deps.leakCanary
}